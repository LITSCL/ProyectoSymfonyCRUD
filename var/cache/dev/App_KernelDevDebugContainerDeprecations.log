a:9:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:61:"Please install the "intl" PHP extension for best performance.";s:4:"file";s:110:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:315;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:116:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\dependency-injection\Compiler\MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:126:"Since symfony/security-bundle 5.3: The child node "encoders" at path "security" is deprecated, use "password_hashers" instead.";s:4:"file";s:108:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\security-bundle\DependencyInjection\MainConfiguration.php";s:4:"line";i:73;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:92:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\config\Definition\Builder\ExprBuilder.php";s:4:"line";i:239;s:8:"function";s:59:"Symfony\Bundle\SecurityBundle\DependencyInjection\{closure}";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\MainConfiguration";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Method "Symfony\Component\Security\Core\User\UserInterface::getUsername()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Entity\Usuario" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:85:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:330;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:108:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:720;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Security\Core\User\UserInterface::getUserIdentifier()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Entity\Usuario" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:85:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:330;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:108:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:720;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:280:"Method "Symfony\Component\Security\Core\User\UserInterface::getPassword()" might add "?string" as a native return type declaration in the future. Do the same in implementation "App\Entity\Usuario" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:85:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:330;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:108:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:720;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:276:"Method "Symfony\Component\Security\Core\User\UserInterface::getSalt()" might add "?string" as a native return type declaration in the future. Do the same in implementation "App\Entity\Usuario" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:85:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:330;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:108:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:720;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Method "Symfony\Component\Security\Core\User\UserInterface::getRoles()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Entity\Usuario" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:85:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:330;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:108:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:720;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:235:"Since symfony/security-bundle 5.3: Configuring an encoder for a user class that does not implement "Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" is deprecated, class "App\Entity\Usuario" should implement it.";s:4:"file";s:108:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:721;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:108:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:189;s:8:"function";s:14:"createEncoders";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:242:"Since symfony/security-bundle 5.3: Configuring a password hasher for a user class that does not implement "Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" is deprecated, class "App\Entity\Usuario" should implement it.";s:4:"file";s:108:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:836;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:108:"C:\xampp\htdocs\ProyectoSymfonyCRUD\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:193;s:8:"function";s:13:"createHashers";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}}